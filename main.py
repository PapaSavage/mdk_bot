import asyncio
import logging
from aiogram import Bot, Dispatcher, types

import keyboards as kb

from config import BOT_TOKEN

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await bot.send_message(
        chat_id=message.from_user.id,
        text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω! üõçÔ∏è\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –∏ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –µ–≥–æ —Å—Ç–∞—Ç—É—Å.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã. –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫! üòä",
        reply_markup=kb.keyboard_builder(
            [
                [
                    "üõí –ú–µ–Ω—é",
                    "",
                    "https://mdk-botstore.vercel.app/" + str(message.from_user.id),
                ],
                [
                    "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã",
                    "",
                    "https://mdk-botstore.vercel.app/order/"
                    + str(message.from_user.id),
                ],
            ]
        ),
    )


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
